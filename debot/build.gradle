plugins {
    id "com.github.dcendents.android-maven" version "1.5"
    id "com.jfrog.bintray" version "1.7.3"
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        encoding = 'UTF-8'
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    packagingOptions {
        exclude 'LICENSE.txt'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:25.1.0'
    compile 'com.squareup:seismic:1.0.2'

    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
    androidTestCompile('org.mockito:mockito-core:1.10.19') {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }
    androidTestCompile('com.google.dexmaker:dexmaker-mockito:1.2') {
        exclude group: 'org.mockito', module: 'mockito-core'
    }
}

group = 'com.tomoima.debot'
version = '2.0.2'

def siteUrl = 'https://github.com/tomoima525/debot'
def gitUrl = 'https://github.com/tomoima525/debot.git'

bintray {
    user = bintrayUserProperty
    key = bintrayApiKeyProperty

    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = 'debot'
        vcsUrl = gitUrl
        desc = 'A simple Android library to create Debugging menu.'
        issueTrackerUrl = 'https://github.com/tomoima525/debot/issues'
        licenses = ['Apache-2.0']
        vcsUrl = gitUrl
        labels = ['android']
        publicDownloadNumbers = true

    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'debot'
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'tomoima525'
                        name 'Tomoaki Imai'
                        email 'tomoima525@gmail.com'
                    }
                }
                scm {
                    connection 'https://github.com/tomoima525/debot.git'
                    developerConnection 'https://github.com/tomoima525/debot.git'
                    url siteUrl

                }
            }
        }
    }
}


def getBintrayUserProperty() {
    return hasProperty('BINTRAY_USER') ? BINTRAY_USER : ""
}

def getBintrayApiKeyProperty() {
    return hasProperty('BINTRAY_KEY') ? BINTRAY_KEY : ""
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

afterEvaluate {
    javadoc.classpath += files(android.libraryVariants.collect { variant ->
        variant.javaCompile.classpath.files
    })
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

task findConventions << {
    println project.getConvention()
}

